/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.54
 * Generated at: 2014-06-28 09:34:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;
import java.sql.Date;

public final class operatePerson_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


	/** SQL 值中的單引號(')需要轉化為 \'  */
	public String forSQL(String sql){
		return sql.replace("'", "\\'");
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

	String name = request.getParameter("name");
	String englishName = request.getParameter("englishName");
	String age = request.getParameter("age");
	String birthday = request.getParameter("birthday");
	String sex = request.getParameter("sex");
	String description = request.getParameter("description");

	String action = request.getParameter("action");

	if("add".equals(action)){

		// INSERT SQL 敘述
		String sql = "INSERT INTO tb_person " +
					" ( name, english_name, " +
					"   age, sex, birthday,  " +
					"   description ) values " +
					" ( '" + forSQL(name) + "', '" + forSQL(englishName) + "', " +
					"   '" + age + "', '" + sex + "', '" + birthday + "', " +
					"   '" + forSQL(description) + "' ) " ;


		Connection conn = null;
		Statement stmt = null;
		int result = 0;

		try{

			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
			conn = DriverManager.getConnection(
							"jdbc:mysql://localhost:3306/databaseWeb?characterEncoding=UTF-8", 
							"root", 
							"admin");

			stmt = conn.createStatement();

			// 使用 Statement 執行 SQL 敘述
			result = stmt.executeUpdate(sql);

		}catch(SQLException e){
			out.println("執行SQL\"" + sql + "\"時發生例外：" + e.getMessage());
			return;
		}finally{
			if(stmt != null)	stmt.close();
			if(conn != null)	conn.close();
		}

		out.println("<html><style>body{font-size:12px; line-height:25px; }</style><body>");
		out.println(result + " 條記錄被增加到資料庫中。");
		out.println("<a href='index.jsp'>傳回人員列表</a>");

		// 將執行的 SQL 敘述輸出到客戶端
		out.println("<br/><br/>執行的 SQL 敘述為：<br/>" + sql);

		return;

	}
	else if("del".equals(action)){

		// 取一個或者多個 ID 值
		String[] id = request.getParameterValues("id");
		if(id == null || id.length == 0){	out.println("沒有勾選任何行");	return;	}

		String condition = "";

		for(int i=0; i<id.length; i++){
			if(i == 0)	condition = "" + id[i];
			else		condition += ", " + id[i];
		}

		String sql = "DELETE FROM order_table WHERE order_key IN (" + condition + ") ";		

		Connection conn = null;
		Statement stmt = null;

		try{
			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
			conn = DriverManager.getConnection(
					"jdbc:mysql://localhost:3306/member_database", 
					"root", 
					"801230");

			stmt = conn.createStatement();

			// 使用 Statement 執行 SQL 敘述
			int result = stmt.executeUpdate(sql);

			out.println("<html><style>body{font-size:12px; line-height:25px; }</style><body>");
			out.println(result + " 條記錄被刪除。");
			out.println("<a href='index.jsp'>傳回人員列表</a>");

			// 將執行的 SQL 敘述輸出到客戶端
			out.println("<br/><br/>執行的 SQL 敘述為：<br/>" + sql);

		}catch(SQLException e){
			out.println("執行SQL\"" + sql + "\"時發生例外：" + e.getMessage());
			e.printStackTrace();
		}finally{
			if(stmt != null)	stmt.close();
			if(conn != null)	conn.close();
		}
	}
	else if("edit".equals(action)){

		String id = request.getParameter("id");
		String sql = "SELECT * FROM tb_person WHERE id = " + id;

		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;

		try{
			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
			conn = DriverManager.getConnection(
								"jdbc:mysql://localhost:3306/databaseWeb?characterEncoding=UTF-8", 
								"root", 
								"admin");

			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);

			if(rs.next()){
				// 有記錄 將響應字段從資料庫中取出 儲存到 request 中，顯示到 修改頁面
				request.setAttribute("id", rs.getString("id"));
				request.setAttribute("name", rs.getString("name"));
				request.setAttribute("englishName", rs.getString("english_name"));
				request.setAttribute("age", rs.getString("age"));
				request.setAttribute("sex", rs.getString("sex"));
				request.setAttribute("birthday", rs.getString("birthday"));
				request.setAttribute("description", rs.getString("description"));

				request.setAttribute("action", action);

				// 轉到修改頁面
				request.getRequestDispatcher("addPerson.jsp").forward(request, response);
			}
			else{
				// 沒有資料
				out.println("沒有找到 id 為 " + id + " 的記錄。");
			}
		}catch(SQLException e){
			out.println("執行SQL\"" + sql + "\"時發生例外：" + e.getMessage());
			e.printStackTrace();
		}finally{
			if(rs != null)		rs.close();
			if(stmt != null)	stmt.close();
			if(conn != null)	conn.close();
		}
	}
	else if("save".equals(action)){

		String id = request.getParameter("id");

		String sql = "UPDATE tb_person SET " +
					" 	name = '" + forSQL(name) + "', " +
					" 	english_name = '" + forSQL(englishName) + "', " +
					" 	sex = '" + sex + "', " +
					"	age = '" + age + "', " +
					" 	birthday = '" + birthday + "', " +
					" 	description = '" + forSQL(description) + "' " +
					" WHERE id = " + id;

		Connection conn = null;
		Statement stmt = null;
		try{
			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
			conn = DriverManager.getConnection(
								"jdbc:mysql://localhost:3306/databaseWeb?characterEncoding=UTF-8", 
								"root", 
								"admin");

			stmt = conn.createStatement();

			// 使用 Statement 執行 SQL 敘述
			int result = stmt.executeUpdate(sql);

			out.println("<html><style>body{font-size:12px; line-height:25px; }</style><body>");

			if(result == 0)		out.println("影響數目為 0, 修改失敗. ");
			else	out.println(result + " 條記錄被修改。");

			out.println("<a href='index.jsp'>傳回人員列表</a>");

			// 將執行的 SQL 敘述輸出到客戶端
			out.println("<br/><br/>執行的 SQL 敘述為：<br/>" + sql);

		}catch(SQLException e){
			out.println("執行SQL\"" + sql + "\"時發生例外：" + e.getMessage());
			e.printStackTrace();
		}finally{
			if(stmt != null)	stmt.close();
			if(conn != null)	conn.close();
		}
	}
	else{
		String id = request.getParameter("id");
		String sql = "UPDATE tb_person SET name = ?, english_name = ?, sex = ?, age = ?, birthday = ?, description = ? WHERE id = ? ";

		Connection conn = null;
		PreparedStatement preStmt = null;

		try{
			DriverManager.registerDriver(new com.mysql.jdbc.Driver());
			conn = DriverManager.getConnection(
								"jdbc:mysql://localhost:3306/databaseWeb?characterEncoding=UTF-8", 
								"root", 
								"admin");

			preStmt = conn.prepareStatement(sql);
			preStmt.setString(1, name);
			preStmt.setString(2, englishName);
			preStmt.setString(3, sex);
			preStmt.setInt(4, Integer.parseInt(age));
			preStmt.setDate(5, new Date(new SimpleDateFormat("yyyy-MM-dd").parse(birthday).getTime()));
			preStmt.setString(6, description);
			preStmt.setInt(7, Integer.parseInt(id));

			// 使用 preStmt 執行 SQL 敘述
			int result = preStmt.executeUpdate(sql);

			out.println("<html><style>body{font-size:12px; line-height:25px; }</style><body>");

			if(result == 0)		out.println("影響數目為 0, 修改失敗. ");
			else	out.println(result + " 條記錄被修改。");

			out.println("<a href='index.jsp'>傳回人員列表</a>");

			// 將執行的 SQL 敘述輸出到客戶端
			out.println("<br/><br/>執行的 SQL 敘述為：<br/>" + sql);

		}catch(SQLException e){
			out.println("執行SQL\"" + sql + "\"時發生例外：" + e.getMessage());
			e.printStackTrace();
		}finally{
			if(preStmt != null)	preStmt.close();
			if(conn != null)	conn.close();
		}
	}


    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
